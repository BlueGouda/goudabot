#!/usr/bin/env bash
# Option parsing from https://rsalveti.wordpress.com/2007/04/03/bash-parsing-arguments-with-getopts/

GIT_DIR=~/git/
TMP=/tmp/
BOILER=boilerplate

usage()
{
cat << DONE
	usage: ./init project_name [options]

	Initialize a new site.

	OPTIONS:
	-h      Show this message
	-t      Template name
	-v      Verbose
DONE
}

PROJECT=$1
VERBOSE=
TEMPLATE=""
while getopts “hvt:” OPTION
do
  case $OPTION in
      h)
          usage
          exit 1
          ;;
      v)
          VERBOSE=1
          ;;
      t)
          TEMPLATE=$OPTARG
          ;;
      ?)
          usage
          exit
          ;;
  esac
done 

check()
{
	if [ -d $GIT_DIR$PROJECT ]
		then
		echo
		echo "Error: This project already exists!"
		echo
		usage
		exit 1
	fi
}

generate()
{
	cd $GIT_DIR
	git init --bare --shared $PROJECT
	
	if [ ! -d $GIT_DIR$PROJECT ]
		then
		echo
		echo "Error: Git did not initialize correctly!"
		echo
		usage
		exit 1
	fi

	echo "Making template..."
	cd $TMP
	rm -rf $PROJECT
	git clone $GIT_DIR$BOILER
	cd $BOILER
	git remote rm origin
	git remote add origin $GIT_DIR$PROJECT
	git push origin master
	cd $TMP
	rm -rf $PROJECT
	rm -rf $BOILER
	echo "Template complete!"
}

createhook()
{
	cd $GIT_DIR$PROJECT/hooks
	echo "#!/usr/bin/env bash" > post-receive
	echo NAME=$PROJECT >> post-receive
	echo "OUT=\`gouda build \$NAME\`" >> post-receive
	echo echo \$OUT >> post-receive
	chmod +x post-receive
}

if [[ "$PROJECT" == */* ]]
then
	usage
	exit 1
fi

if [[ "$PROJECT" == "" ]]
then
	usage
	exit 1
fi

echo "Initializing..."
check
generate
createhook
echo "Done!"